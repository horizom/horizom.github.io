(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{128:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,b=m["".concat(i,".").concat(d)]||m[d]||p[d]||o;return n?r.a.createElement(b,c(c({ref:t},l),{},{components:n})):r.a.createElement(b,c({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(8),o=(n(0),n(128)),i={},c={unversionedId:"framework/database/migrations",id:"framework/database/migrations",isDocsHomePage:!1,title:"Introduction",description:"Migrations are like version control for your database, allowing your team to define and share the application's database schema definition. If you have ever had to tell a teammate to manually add a column to their local database schema after pulling in your changes from source control, you've faced the problem that database migrations solve.",source:"@site/docs/framework/database/migrations.md",sourceDirName:"framework/database",slug:"/framework/database/migrations",permalink:"/docs/framework/database/migrations",editUrl:"https://github.com/horizom/docs/edit/master/docs/framework/database/migrations.md",version:"current",frontMatter:{},sidebar:"framework",previous:{title:"getting-started",permalink:"/docs/framework/database/getting-started"},next:{title:"orm",permalink:"/docs/framework/database/orm"}},s=[],l={toc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Migrations are like version control for your database, allowing your team to define and share the application's database schema definition. If you have ever had to tell a teammate to manually add a column to their local database schema after pulling in your changes from source control, you've faced the problem that database migrations solve."),Object(o.b)("h1",{id:"migration-structure"},"Migration Structure"),Object(o.b)("p",null,"A migration class contains two methods: ",Object(o.b)("inlineCode",{parentName:"p"},"up")," and ",Object(o.b)("inlineCode",{parentName:"p"},"down"),". The ",Object(o.b)("inlineCode",{parentName:"p"},"up")," method is used to add new tables, columns, or indexes to your database, while the ",Object(o.b)("inlineCode",{parentName:"p"},"down")," method should reverse the operations performed by the ",Object(o.b)("inlineCode",{parentName:"p"},"up")," method."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-php"},"\n<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateFlightsTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('flights', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->string('airline');\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::drop('flights');\n    }\n}\n\n")),Object(o.b)("h1",{id:"tables"},"Tables"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://laravel.com/docs/8.x/migrations#tables"})))}u.isMDXComponent=!0}}]);